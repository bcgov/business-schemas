/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type NameTranslation = string;
export type TheTypeOfTranslation = "TRANSLATION" | "DBA";
export type NameTranslations = {
  id?: string;
  name: NameTranslation;
  type?: TheTypeOfTranslation;
  [k: string]: unknown;
}[];
export type Person = (
  | {
      partyType?: "person";
      [k: string]: unknown;
    }
  | {
      partyType?: "organization";
      [k: string]: unknown;
    }
) & {
  partyType: TheTypeOfParty;
  firstName?: string;
  lastName?: string;
  middleInitial?: string;
  organizationName?: string;
  identifier?: TheIdentifierIncorporationNumberIfAvailableForOrganization;
  taxId?: TheCRABusinessNumber;
  email?: string;
  [k: string]: unknown;
};
export type TheTypeOfParty = "organization" | "person";
export type TheIdentifierIncorporationNumberIfAvailableForOrganization = string;
export type TheCRABusinessNumber = string;
export type TheNameOfTheShareClass = string;
export type TheDisplayOrderOfTheSharesThatIndicatesPriority = number;
export type MaximumNumberOfSharesInTheClass = number | null;
export type InitialValueOfEachShare = number | null;
export type HasMaximumNumberOfShares = boolean;
export type HasInitialValueOfEachShare = boolean;
export type HasSpecialRightsOrRestrictions = boolean;
export type TheNameOfTheShareSeries = string;
export type TheDisplayOrderThatIndicatesPriority = number;
export type MaximumNumberOfSharesInTheSeries = number | null;
export type HasMaximumNumberOfShares1 = boolean;
export type HasSpecialRightsOrRestrictions1 = boolean;
export type HasPreExistingCompanyProvisions = boolean;

export interface TransitionFiling {
  transition: {
    nameTranslations?: NameTranslations;
    offices: {
      [k: string]: unknown;
    };
    parties: Party[];
    shareStructure: ShareStructureSchema;
    hasProvisions: HasPreExistingCompanyProvisions;
    contactPoint?: BusinessContactPointSchema;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface Party {
  officer: Person;
  deliveryAddress?: TheAddressSchema;
  mailingAddress: TheAddressSchema;
  title?: string;
  roles: PartyRole[];
  [k: string]: unknown;
}
export interface TheAddressSchema {
  streetAddress: string;
  streetAddressAdditional?: string;
  addressCity: string;
  addressCountry: string;
  addressRegion: string | null;
  postalCode: string;
  deliveryInstructions?: string | null;
  [k: string]: unknown;
}
export interface PartyRole {
  roleType: "Completing Party" | "Custodian" | "Liquidator" | "Director" | "Incorporator" | "Proprietor" | "Partner";
  appointmentDate: string;
  cessationDate?: string | null;
  [k: string]: unknown;
}
export interface ShareStructureSchema {
  resolutionDates?: string[];
  shareClasses: ShareClass[];
  [k: string]: unknown;
}
export interface ShareClass {
  name: TheNameOfTheShareClass;
  priority: TheDisplayOrderOfTheSharesThatIndicatesPriority;
  maxNumberOfShares: MaximumNumberOfSharesInTheClass;
  parValue: InitialValueOfEachShare;
  currency: string | null;
  hasMaximumShares: HasMaximumNumberOfShares;
  hasParValue: HasInitialValueOfEachShare;
  hasRightsOrRestrictions: HasSpecialRightsOrRestrictions;
  series?: ShareSeries[];
  [k: string]: unknown;
}
export interface ShareSeries {
  name: TheNameOfTheShareSeries;
  priority: TheDisplayOrderThatIndicatesPriority;
  maxNumberOfShares: MaximumNumberOfSharesInTheSeries;
  hasMaximumShares: HasMaximumNumberOfShares1;
  hasRightsOrRestrictions: HasSpecialRightsOrRestrictions1;
  [k: string]: unknown;
}
export interface BusinessContactPointSchema {
  email: string;
  phone?: string;
  extension?: number;
  [k: string]: unknown;
}
